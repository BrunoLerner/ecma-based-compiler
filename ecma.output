Terminals unused in grammar

   EQUAL_EQUAL
   ERR_REDCL
   ERR_NO_DECL
   ERR_TYPE_EXPECTED
   ERR_BOOL_TYPE_EXPECTED
   ERR_TYPE_MISMATCH
   ERR_INVALID_TYPE
   ERR_KIND_NOT_STRUCT
   ERR_FIELD_NOT_DECL
   ERR_KIND_NOT_ARRAY
   ERR_INVALID_INDEX_TYPE
   ERR_KIND_NOT_VAR
   ERR_KIND_NOT_FUNCTION
   ERR_TOO_MANY_ARGS
   ERR_PARAM_TYPE
   ERR_TOO_FEW_ARGS
   ERR_RETURN_TYPE_MISMATCH
   NT_TRUE
   NT_FALSE
   NT_CHR
   NT_STR
   NT_NUM
   MF
   MC
   NO_KIND_DEF_
   VAR_
   PARAM_
   FUNCTION_
   FIELD_
   ARRAY_TYPE_
   STRUCT_TYPE_
   ALIAS_TYPE_
   SCALAR_TYPE_
   UNIVERSAL_


Grammar

    0 $accept: P $end

    1 P: LDE

    2 LDE: LDE DE
    3    | DE

    4 DE: DF
    5   | DT

    6 T: INTEGER
    7  | CHAR
    8  | BOOLEAN
    9  | STRING
   10  | IDU

   11 NB: %empty

   12 DT: TYPE IDD ASSIGN const_array LEFT_SQUARE NUM RIGHT_SQUARE OF T
   13   | TYPE IDD ASSIGN STRUCT NB LEFT_BRACES DC RIGHT_BRACES
   14   | TYPE IDD ASSIGN T

   15 DC: DC SEMI_COLON LI COLON T
   16   | LI COLON T

   17 DF: FUNCTION IDD NB LEFT_PARENTHESIS LP RIGHT_PARENTHESIS COLON T B

   18 LP: LP COMMA IDD COLON T
   19   | IDD COLON T
   20   | %empty

   21 B: LEFT_BRACES LDV LS RIGHT_BRACES
   22  | LEFT_BRACES LS RIGHT_BRACES

   23 LDV: LDV DV
   24    | DV

   25 LS: LS S
   26   | S

   27 DV: VAR LI COLON T SEMI_COLON

   28 LI: LI COMMA IDD
   29   | IDD

   30 S: IF LEFT_PARENTHESIS E RIGHT_PARENTHESIS S
   31  | IF LEFT_PARENTHESIS E RIGHT_PARENTHESIS S ELSE S
   32  | WHILE LEFT_PARENTHESIS E RIGHT_PARENTHESIS S
   33  | DO S WHILE LEFT_PARENTHESIS E RIGHT_PARENTHESIS SEMI_COLON
   34  | B
   35  | LV ASSIGN E SEMI_COLON
   36  | BREAK SEMI_COLON
   37  | CONTINUE SEMI_COLON
   38  | RETURN E SEMI_COLON

   39 E: E AND L
   40  | E OR L
   41  | L

   42 L: L LESS_THAN R
   43  | L GREATER_THAN R
   44  | L LESS_OR_EQUAL R
   45  | L GREATER_OR_EQUAL R
   46  | L EQUALS R
   47  | L NOT_EQUAL R
   48  | R

   49 R: R PLUS Y
   50  | R MINUS Y
   51  | Y

   52 Y: Y TIMES F
   53  | Y DIVIDE F
   54  | F

   55 F: LV
   56  | PLUS_PLUS LV
   57  | MINUS_MINUS LV
   58  | LV PLUS_PLUS
   59  | LV MINUS_MINUS
   60  | LEFT_PARENTHESIS E RIGHT_PARENTHESIS
   61  | IDU LEFT_PARENTHESIS LE RIGHT_PARENTHESIS
   62  | MINUS F
   63  | NOT F
   64  | TRUE
   65  | FALSE
   66  | CHR
   67  | STR
   68  | NUM

   69 LE: LE COMMA E
   70   | E

   71 LV: LV DOT IDU
   72   | LV LEFT_SQUARE E RIGHT_SQUARE
   73   | IDU

   74 IDD: id

   75 IDU: id

   76 TRUE: const_true

   77 FALSE: const_false

   78 CHR: const_char

   79 STR: const_string

   80 NUM: const_number


Terminals, with rules where they appear

$end (0) 0
error (256)
STRUCT (258) 13
OF (259) 12
COLON (260) 15 16 17 18 19 27
SEMI_COLON (261) 15 27 33 35 36 37 38
COMMA (262) 18 28 69
EQUALS (263) 46
LEFT_SQUARE (264) 12 72
RIGHT_SQUARE (265) 12 72
LEFT_BRACES (266) 13 21 22
RIGHT_BRACES (267) 13 21 22
LEFT_PARENTHESIS (268) 17 30 31 32 33 60 61
RIGHT_PARENTHESIS (269) 17 30 31 32 33 60 61
AND (270) 39
OR (271) 40
LESS_THAN (272) 42
GREATER_THAN (273) 43
LESS_OR_EQUAL (274) 44
GREATER_OR_EQUAL (275) 45
NOT_EQUAL (276) 47
EQUAL_EQUAL (277)
PLUS (278) 49
PLUS_PLUS (279) 56 58
MINUS (280) 50 62
MINUS_MINUS (281) 57 59
TIMES (282) 52
DIVIDE (283) 53
DOT (284) 71
NOT (285) 63
TYPE (286) 12 13 14
RETURN (287) 38
ELSE (288) 31
BREAK (289) 36
WHILE (290) 32 33
VAR (291) 27
ASSIGN (292) 12 13 14 35
CONTINUE (293) 37
FUNCTION (294) 17
STRING (295) 9
IF (296) 30 31
BOOLEAN (297) 8
CHAR (298) 7
INTEGER (299) 6
DO (300) 33
const_array (301) 12
const_char (302) 78
const_number (303) 80
const_string (304) 79
id (305) 74 75
const_true (306) 76
const_false (307) 77
ERR_REDCL (308)
ERR_NO_DECL (309)
ERR_TYPE_EXPECTED (310)
ERR_BOOL_TYPE_EXPECTED (311)
ERR_TYPE_MISMATCH (312)
ERR_INVALID_TYPE (313)
ERR_KIND_NOT_STRUCT (314)
ERR_FIELD_NOT_DECL (315)
ERR_KIND_NOT_ARRAY (316)
ERR_INVALID_INDEX_TYPE (317)
ERR_KIND_NOT_VAR (318)
ERR_KIND_NOT_FUNCTION (319)
ERR_TOO_MANY_ARGS (320)
ERR_PARAM_TYPE (321)
ERR_TOO_FEW_ARGS (322)
ERR_RETURN_TYPE_MISMATCH (323)
NT_TRUE <type> (324)
NT_FALSE <type> (325)
NT_CHR <type> (326)
NT_STR <type> (327)
NT_NUM <type> (328)
MF <type> (329)
MC <type> (330)
NO_KIND_DEF_ (331)
VAR_ (332)
PARAM_ (333)
FUNCTION_ (334)
FIELD_ (335)
ARRAY_TYPE_ (336)
STRUCT_TYPE_ (337)
ALIAS_TYPE_ (338)
SCALAR_TYPE_ (339)
UNIVERSAL_ (340)
"then" (341)


Nonterminals, with rules where they appear

$accept (87)
    on left: 0
P (88)
    on left: 1, on right: 0
LDE (89)
    on left: 2 3, on right: 1 2
DE (90)
    on left: 4 5, on right: 2 3
T (91)
    on left: 6 7 8 9 10, on right: 12 14 15 16 17 18 19 27
NB (92)
    on left: 11, on right: 13 17
DT (93)
    on left: 12 13 14, on right: 5
DC (94)
    on left: 15 16, on right: 13 15
DF (95)
    on left: 17, on right: 4
LP (96)
    on left: 18 19 20, on right: 17 18
B (97)
    on left: 21 22, on right: 17 34
LDV (98)
    on left: 23 24, on right: 21 23
LS (99)
    on left: 25 26, on right: 21 22 25
DV (100)
    on left: 27, on right: 23 24
LI (101)
    on left: 28 29, on right: 15 16 27 28
S (102)
    on left: 30 31 32 33 34 35 36 37 38, on right: 25 26 30 31 32 33
E (103)
    on left: 39 40 41, on right: 30 31 32 33 35 38 39 40 60 69 70 72
L (104)
    on left: 42 43 44 45 46 47 48, on right: 39 40 41 42 43 44 45 46
    47
R (105)
    on left: 49 50 51, on right: 42 43 44 45 46 47 48 49 50
Y (106)
    on left: 52 53 54, on right: 49 50 51 52 53
F (107)
    on left: 55 56 57 58 59 60 61 62 63 64 65 66 67 68, on right: 52
    53 54 62 63
LE (108)
    on left: 69 70, on right: 61 69
LV (109)
    on left: 71 72 73, on right: 35 55 56 57 58 59 71 72
IDD (110)
    on left: 74, on right: 12 13 14 17 18 19 28 29
IDU (111)
    on left: 75, on right: 10 61 71 73
TRUE (112)
    on left: 76, on right: 64
FALSE (113)
    on left: 77, on right: 65
CHR (114)
    on left: 78, on right: 66
STR (115)
    on left: 79, on right: 67
NUM (116)
    on left: 80, on right: 12 68


State 0

    0 $accept: . P $end

    TYPE      shift, and go to state 1
    FUNCTION  shift, and go to state 2

    P    go to state 3
    LDE  go to state 4
    DE   go to state 5
    DT   go to state 6
    DF   go to state 7


State 1

   12 DT: TYPE . IDD ASSIGN const_array LEFT_SQUARE NUM RIGHT_SQUARE OF T
   13   | TYPE . IDD ASSIGN STRUCT NB LEFT_BRACES DC RIGHT_BRACES
   14   | TYPE . IDD ASSIGN T

    id  shift, and go to state 8

    IDD  go to state 9


State 2

   17 DF: FUNCTION . IDD NB LEFT_PARENTHESIS LP RIGHT_PARENTHESIS COLON T B

    id  shift, and go to state 8

    IDD  go to state 10


State 3

    0 $accept: P . $end

    $end  shift, and go to state 11


State 4

    1 P: LDE .
    2 LDE: LDE . DE

    TYPE      shift, and go to state 1
    FUNCTION  shift, and go to state 2

    $default  reduce using rule 1 (P)

    DE  go to state 12
    DT  go to state 6
    DF  go to state 7


State 5

    3 LDE: DE .

    $default  reduce using rule 3 (LDE)


State 6

    5 DE: DT .

    $default  reduce using rule 5 (DE)


State 7

    4 DE: DF .

    $default  reduce using rule 4 (DE)


State 8

   74 IDD: id .

    $default  reduce using rule 74 (IDD)


State 9

   12 DT: TYPE IDD . ASSIGN const_array LEFT_SQUARE NUM RIGHT_SQUARE OF T
   13   | TYPE IDD . ASSIGN STRUCT NB LEFT_BRACES DC RIGHT_BRACES
   14   | TYPE IDD . ASSIGN T

    ASSIGN  shift, and go to state 13


State 10

   17 DF: FUNCTION IDD . NB LEFT_PARENTHESIS LP RIGHT_PARENTHESIS COLON T B

    $default  reduce using rule 11 (NB)

    NB  go to state 14


State 11

    0 $accept: P $end .

    $default  accept


State 12

    2 LDE: LDE DE .

    $default  reduce using rule 2 (LDE)


State 13

   12 DT: TYPE IDD ASSIGN . const_array LEFT_SQUARE NUM RIGHT_SQUARE OF T
   13   | TYPE IDD ASSIGN . STRUCT NB LEFT_BRACES DC RIGHT_BRACES
   14   | TYPE IDD ASSIGN . T

    STRUCT       shift, and go to state 15
    STRING       shift, and go to state 16
    BOOLEAN      shift, and go to state 17
    CHAR         shift, and go to state 18
    INTEGER      shift, and go to state 19
    const_array  shift, and go to state 20
    id           shift, and go to state 21

    T    go to state 22
    IDU  go to state 23


State 14

   17 DF: FUNCTION IDD NB . LEFT_PARENTHESIS LP RIGHT_PARENTHESIS COLON T B

    LEFT_PARENTHESIS  shift, and go to state 24


State 15

   13 DT: TYPE IDD ASSIGN STRUCT . NB LEFT_BRACES DC RIGHT_BRACES

    $default  reduce using rule 11 (NB)

    NB  go to state 25


State 16

    9 T: STRING .

    $default  reduce using rule 9 (T)


State 17

    8 T: BOOLEAN .

    $default  reduce using rule 8 (T)


State 18

    7 T: CHAR .

    $default  reduce using rule 7 (T)


State 19

    6 T: INTEGER .

    $default  reduce using rule 6 (T)


State 20

   12 DT: TYPE IDD ASSIGN const_array . LEFT_SQUARE NUM RIGHT_SQUARE OF T

    LEFT_SQUARE  shift, and go to state 26


State 21

   75 IDU: id .

    $default  reduce using rule 75 (IDU)


State 22

   14 DT: TYPE IDD ASSIGN T .

    $default  reduce using rule 14 (DT)


State 23

   10 T: IDU .

    $default  reduce using rule 10 (T)


State 24

   17 DF: FUNCTION IDD NB LEFT_PARENTHESIS . LP RIGHT_PARENTHESIS COLON T B

    id  shift, and go to state 8

    $default  reduce using rule 20 (LP)

    LP   go to state 27
    IDD  go to state 28


State 25

   13 DT: TYPE IDD ASSIGN STRUCT NB . LEFT_BRACES DC RIGHT_BRACES

    LEFT_BRACES  shift, and go to state 29


State 26

   12 DT: TYPE IDD ASSIGN const_array LEFT_SQUARE . NUM RIGHT_SQUARE OF T

    const_number  shift, and go to state 30

    NUM  go to state 31


State 27

   17 DF: FUNCTION IDD NB LEFT_PARENTHESIS LP . RIGHT_PARENTHESIS COLON T B
   18 LP: LP . COMMA IDD COLON T

    COMMA              shift, and go to state 32
    RIGHT_PARENTHESIS  shift, and go to state 33


State 28

   19 LP: IDD . COLON T

    COLON  shift, and go to state 34


State 29

   13 DT: TYPE IDD ASSIGN STRUCT NB LEFT_BRACES . DC RIGHT_BRACES

    id  shift, and go to state 8

    DC   go to state 35
    LI   go to state 36
    IDD  go to state 37


State 30

   80 NUM: const_number .

    $default  reduce using rule 80 (NUM)


State 31

   12 DT: TYPE IDD ASSIGN const_array LEFT_SQUARE NUM . RIGHT_SQUARE OF T

    RIGHT_SQUARE  shift, and go to state 38


State 32

   18 LP: LP COMMA . IDD COLON T

    id  shift, and go to state 8

    IDD  go to state 39


State 33

   17 DF: FUNCTION IDD NB LEFT_PARENTHESIS LP RIGHT_PARENTHESIS . COLON T B

    COLON  shift, and go to state 40


State 34

   19 LP: IDD COLON . T

    STRING   shift, and go to state 16
    BOOLEAN  shift, and go to state 17
    CHAR     shift, and go to state 18
    INTEGER  shift, and go to state 19
    id       shift, and go to state 21

    T    go to state 41
    IDU  go to state 23


State 35

   13 DT: TYPE IDD ASSIGN STRUCT NB LEFT_BRACES DC . RIGHT_BRACES
   15 DC: DC . SEMI_COLON LI COLON T

    SEMI_COLON    shift, and go to state 42
    RIGHT_BRACES  shift, and go to state 43


State 36

   16 DC: LI . COLON T
   28 LI: LI . COMMA IDD

    COLON  shift, and go to state 44
    COMMA  shift, and go to state 45


State 37

   29 LI: IDD .

    $default  reduce using rule 29 (LI)


State 38

   12 DT: TYPE IDD ASSIGN const_array LEFT_SQUARE NUM RIGHT_SQUARE . OF T

    OF  shift, and go to state 46


State 39

   18 LP: LP COMMA IDD . COLON T

    COLON  shift, and go to state 47


State 40

   17 DF: FUNCTION IDD NB LEFT_PARENTHESIS LP RIGHT_PARENTHESIS COLON . T B

    STRING   shift, and go to state 16
    BOOLEAN  shift, and go to state 17
    CHAR     shift, and go to state 18
    INTEGER  shift, and go to state 19
    id       shift, and go to state 21

    T    go to state 48
    IDU  go to state 23


State 41

   19 LP: IDD COLON T .

    $default  reduce using rule 19 (LP)


State 42

   15 DC: DC SEMI_COLON . LI COLON T

    id  shift, and go to state 8

    LI   go to state 49
    IDD  go to state 37


State 43

   13 DT: TYPE IDD ASSIGN STRUCT NB LEFT_BRACES DC RIGHT_BRACES .

    $default  reduce using rule 13 (DT)


State 44

   16 DC: LI COLON . T

    STRING   shift, and go to state 16
    BOOLEAN  shift, and go to state 17
    CHAR     shift, and go to state 18
    INTEGER  shift, and go to state 19
    id       shift, and go to state 21

    T    go to state 50
    IDU  go to state 23


State 45

   28 LI: LI COMMA . IDD

    id  shift, and go to state 8

    IDD  go to state 51


State 46

   12 DT: TYPE IDD ASSIGN const_array LEFT_SQUARE NUM RIGHT_SQUARE OF . T

    STRING   shift, and go to state 16
    BOOLEAN  shift, and go to state 17
    CHAR     shift, and go to state 18
    INTEGER  shift, and go to state 19
    id       shift, and go to state 21

    T    go to state 52
    IDU  go to state 23


State 47

   18 LP: LP COMMA IDD COLON . T

    STRING   shift, and go to state 16
    BOOLEAN  shift, and go to state 17
    CHAR     shift, and go to state 18
    INTEGER  shift, and go to state 19
    id       shift, and go to state 21

    T    go to state 53
    IDU  go to state 23


State 48

   17 DF: FUNCTION IDD NB LEFT_PARENTHESIS LP RIGHT_PARENTHESIS COLON T . B

    LEFT_BRACES  shift, and go to state 54

    B  go to state 55


State 49

   15 DC: DC SEMI_COLON LI . COLON T
   28 LI: LI . COMMA IDD

    COLON  shift, and go to state 56
    COMMA  shift, and go to state 45


State 50

   16 DC: LI COLON T .

    $default  reduce using rule 16 (DC)


State 51

   28 LI: LI COMMA IDD .

    $default  reduce using rule 28 (LI)


State 52

   12 DT: TYPE IDD ASSIGN const_array LEFT_SQUARE NUM RIGHT_SQUARE OF T .

    $default  reduce using rule 12 (DT)


State 53

   18 LP: LP COMMA IDD COLON T .

    $default  reduce using rule 18 (LP)


State 54

   21 B: LEFT_BRACES . LDV LS RIGHT_BRACES
   22  | LEFT_BRACES . LS RIGHT_BRACES

    LEFT_BRACES  shift, and go to state 54
    RETURN       shift, and go to state 57
    BREAK        shift, and go to state 58
    WHILE        shift, and go to state 59
    VAR          shift, and go to state 60
    CONTINUE     shift, and go to state 61
    IF           shift, and go to state 62
    DO           shift, and go to state 63
    id           shift, and go to state 21

    B    go to state 64
    LDV  go to state 65
    LS   go to state 66
    DV   go to state 67
    S    go to state 68
    LV   go to state 69
    IDU  go to state 70


State 55

   17 DF: FUNCTION IDD NB LEFT_PARENTHESIS LP RIGHT_PARENTHESIS COLON T B .

    $default  reduce using rule 17 (DF)


State 56

   15 DC: DC SEMI_COLON LI COLON . T

    STRING   shift, and go to state 16
    BOOLEAN  shift, and go to state 17
    CHAR     shift, and go to state 18
    INTEGER  shift, and go to state 19
    id       shift, and go to state 21

    T    go to state 71
    IDU  go to state 23


State 57

   38 S: RETURN . E SEMI_COLON

    LEFT_PARENTHESIS  shift, and go to state 72
    PLUS_PLUS         shift, and go to state 73
    MINUS             shift, and go to state 74
    MINUS_MINUS       shift, and go to state 75
    NOT               shift, and go to state 76
    const_char        shift, and go to state 77
    const_number      shift, and go to state 30
    const_string      shift, and go to state 78
    id                shift, and go to state 21
    const_true        shift, and go to state 79
    const_false       shift, and go to state 80

    E      go to state 81
    L      go to state 82
    R      go to state 83
    Y      go to state 84
    F      go to state 85
    LV     go to state 86
    IDU    go to state 87
    TRUE   go to state 88
    FALSE  go to state 89
    CHR    go to state 90
    STR    go to state 91
    NUM    go to state 92


State 58

   36 S: BREAK . SEMI_COLON

    SEMI_COLON  shift, and go to state 93


State 59

   32 S: WHILE . LEFT_PARENTHESIS E RIGHT_PARENTHESIS S

    LEFT_PARENTHESIS  shift, and go to state 94


State 60

   27 DV: VAR . LI COLON T SEMI_COLON

    id  shift, and go to state 8

    LI   go to state 95
    IDD  go to state 37


State 61

   37 S: CONTINUE . SEMI_COLON

    SEMI_COLON  shift, and go to state 96


State 62

   30 S: IF . LEFT_PARENTHESIS E RIGHT_PARENTHESIS S
   31  | IF . LEFT_PARENTHESIS E RIGHT_PARENTHESIS S ELSE S

    LEFT_PARENTHESIS  shift, and go to state 97


State 63

   33 S: DO . S WHILE LEFT_PARENTHESIS E RIGHT_PARENTHESIS SEMI_COLON

    LEFT_BRACES  shift, and go to state 54
    RETURN       shift, and go to state 57
    BREAK        shift, and go to state 58
    WHILE        shift, and go to state 59
    CONTINUE     shift, and go to state 61
    IF           shift, and go to state 62
    DO           shift, and go to state 63
    id           shift, and go to state 21

    B    go to state 64
    S    go to state 98
    LV   go to state 69
    IDU  go to state 70


State 64

   34 S: B .

    $default  reduce using rule 34 (S)


State 65

   21 B: LEFT_BRACES LDV . LS RIGHT_BRACES
   23 LDV: LDV . DV

    LEFT_BRACES  shift, and go to state 54
    RETURN       shift, and go to state 57
    BREAK        shift, and go to state 58
    WHILE        shift, and go to state 59
    VAR          shift, and go to state 60
    CONTINUE     shift, and go to state 61
    IF           shift, and go to state 62
    DO           shift, and go to state 63
    id           shift, and go to state 21

    B    go to state 64
    LS   go to state 99
    DV   go to state 100
    S    go to state 68
    LV   go to state 69
    IDU  go to state 70


State 66

   22 B: LEFT_BRACES LS . RIGHT_BRACES
   25 LS: LS . S

    LEFT_BRACES   shift, and go to state 54
    RIGHT_BRACES  shift, and go to state 101
    RETURN        shift, and go to state 57
    BREAK         shift, and go to state 58
    WHILE         shift, and go to state 59
    CONTINUE      shift, and go to state 61
    IF            shift, and go to state 62
    DO            shift, and go to state 63
    id            shift, and go to state 21

    B    go to state 64
    S    go to state 102
    LV   go to state 69
    IDU  go to state 70


State 67

   24 LDV: DV .

    $default  reduce using rule 24 (LDV)


State 68

   26 LS: S .

    $default  reduce using rule 26 (LS)


State 69

   35 S: LV . ASSIGN E SEMI_COLON
   71 LV: LV . DOT IDU
   72   | LV . LEFT_SQUARE E RIGHT_SQUARE

    LEFT_SQUARE  shift, and go to state 103
    DOT          shift, and go to state 104
    ASSIGN       shift, and go to state 105


State 70

   73 LV: IDU .

    $default  reduce using rule 73 (LV)


State 71

   15 DC: DC SEMI_COLON LI COLON T .

    $default  reduce using rule 15 (DC)


State 72

   60 F: LEFT_PARENTHESIS . E RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 72
    PLUS_PLUS         shift, and go to state 73
    MINUS             shift, and go to state 74
    MINUS_MINUS       shift, and go to state 75
    NOT               shift, and go to state 76
    const_char        shift, and go to state 77
    const_number      shift, and go to state 30
    const_string      shift, and go to state 78
    id                shift, and go to state 21
    const_true        shift, and go to state 79
    const_false       shift, and go to state 80

    E      go to state 106
    L      go to state 82
    R      go to state 83
    Y      go to state 84
    F      go to state 85
    LV     go to state 86
    IDU    go to state 87
    TRUE   go to state 88
    FALSE  go to state 89
    CHR    go to state 90
    STR    go to state 91
    NUM    go to state 92


State 73

   56 F: PLUS_PLUS . LV

    id  shift, and go to state 21

    LV   go to state 107
    IDU  go to state 70


State 74

   62 F: MINUS . F

    LEFT_PARENTHESIS  shift, and go to state 72
    PLUS_PLUS         shift, and go to state 73
    MINUS             shift, and go to state 74
    MINUS_MINUS       shift, and go to state 75
    NOT               shift, and go to state 76
    const_char        shift, and go to state 77
    const_number      shift, and go to state 30
    const_string      shift, and go to state 78
    id                shift, and go to state 21
    const_true        shift, and go to state 79
    const_false       shift, and go to state 80

    F      go to state 108
    LV     go to state 86
    IDU    go to state 87
    TRUE   go to state 88
    FALSE  go to state 89
    CHR    go to state 90
    STR    go to state 91
    NUM    go to state 92


State 75

   57 F: MINUS_MINUS . LV

    id  shift, and go to state 21

    LV   go to state 109
    IDU  go to state 70


State 76

   63 F: NOT . F

    LEFT_PARENTHESIS  shift, and go to state 72
    PLUS_PLUS         shift, and go to state 73
    MINUS             shift, and go to state 74
    MINUS_MINUS       shift, and go to state 75
    NOT               shift, and go to state 76
    const_char        shift, and go to state 77
    const_number      shift, and go to state 30
    const_string      shift, and go to state 78
    id                shift, and go to state 21
    const_true        shift, and go to state 79
    const_false       shift, and go to state 80

    F      go to state 110
    LV     go to state 86
    IDU    go to state 87
    TRUE   go to state 88
    FALSE  go to state 89
    CHR    go to state 90
    STR    go to state 91
    NUM    go to state 92


State 77

   78 CHR: const_char .

    $default  reduce using rule 78 (CHR)


State 78

   79 STR: const_string .

    $default  reduce using rule 79 (STR)


State 79

   76 TRUE: const_true .

    $default  reduce using rule 76 (TRUE)


State 80

   77 FALSE: const_false .

    $default  reduce using rule 77 (FALSE)


State 81

   38 S: RETURN E . SEMI_COLON
   39 E: E . AND L
   40  | E . OR L

    SEMI_COLON  shift, and go to state 111
    AND         shift, and go to state 112
    OR          shift, and go to state 113


State 82

   41 E: L .
   42 L: L . LESS_THAN R
   43  | L . GREATER_THAN R
   44  | L . LESS_OR_EQUAL R
   45  | L . GREATER_OR_EQUAL R
   46  | L . EQUALS R
   47  | L . NOT_EQUAL R

    EQUALS            shift, and go to state 114
    LESS_THAN         shift, and go to state 115
    GREATER_THAN      shift, and go to state 116
    LESS_OR_EQUAL     shift, and go to state 117
    GREATER_OR_EQUAL  shift, and go to state 118
    NOT_EQUAL         shift, and go to state 119

    $default  reduce using rule 41 (E)


State 83

   48 L: R .
   49 R: R . PLUS Y
   50  | R . MINUS Y

    PLUS   shift, and go to state 120
    MINUS  shift, and go to state 121

    $default  reduce using rule 48 (L)


State 84

   51 R: Y .
   52 Y: Y . TIMES F
   53  | Y . DIVIDE F

    TIMES   shift, and go to state 122
    DIVIDE  shift, and go to state 123

    $default  reduce using rule 51 (R)


State 85

   54 Y: F .

    $default  reduce using rule 54 (Y)


State 86

   55 F: LV .
   58  | LV . PLUS_PLUS
   59  | LV . MINUS_MINUS
   71 LV: LV . DOT IDU
   72   | LV . LEFT_SQUARE E RIGHT_SQUARE

    LEFT_SQUARE  shift, and go to state 103
    PLUS_PLUS    shift, and go to state 124
    MINUS_MINUS  shift, and go to state 125
    DOT          shift, and go to state 104

    $default  reduce using rule 55 (F)


State 87

   61 F: IDU . LEFT_PARENTHESIS LE RIGHT_PARENTHESIS
   73 LV: IDU .

    LEFT_PARENTHESIS  shift, and go to state 126

    $default  reduce using rule 73 (LV)


State 88

   64 F: TRUE .

    $default  reduce using rule 64 (F)


State 89

   65 F: FALSE .

    $default  reduce using rule 65 (F)


State 90

   66 F: CHR .

    $default  reduce using rule 66 (F)


State 91

   67 F: STR .

    $default  reduce using rule 67 (F)


State 92

   68 F: NUM .

    $default  reduce using rule 68 (F)


State 93

   36 S: BREAK SEMI_COLON .

    $default  reduce using rule 36 (S)


State 94

   32 S: WHILE LEFT_PARENTHESIS . E RIGHT_PARENTHESIS S

    LEFT_PARENTHESIS  shift, and go to state 72
    PLUS_PLUS         shift, and go to state 73
    MINUS             shift, and go to state 74
    MINUS_MINUS       shift, and go to state 75
    NOT               shift, and go to state 76
    const_char        shift, and go to state 77
    const_number      shift, and go to state 30
    const_string      shift, and go to state 78
    id                shift, and go to state 21
    const_true        shift, and go to state 79
    const_false       shift, and go to state 80

    E      go to state 127
    L      go to state 82
    R      go to state 83
    Y      go to state 84
    F      go to state 85
    LV     go to state 86
    IDU    go to state 87
    TRUE   go to state 88
    FALSE  go to state 89
    CHR    go to state 90
    STR    go to state 91
    NUM    go to state 92


State 95

   27 DV: VAR LI . COLON T SEMI_COLON
   28 LI: LI . COMMA IDD

    COLON  shift, and go to state 128
    COMMA  shift, and go to state 45


State 96

   37 S: CONTINUE SEMI_COLON .

    $default  reduce using rule 37 (S)


State 97

   30 S: IF LEFT_PARENTHESIS . E RIGHT_PARENTHESIS S
   31  | IF LEFT_PARENTHESIS . E RIGHT_PARENTHESIS S ELSE S

    LEFT_PARENTHESIS  shift, and go to state 72
    PLUS_PLUS         shift, and go to state 73
    MINUS             shift, and go to state 74
    MINUS_MINUS       shift, and go to state 75
    NOT               shift, and go to state 76
    const_char        shift, and go to state 77
    const_number      shift, and go to state 30
    const_string      shift, and go to state 78
    id                shift, and go to state 21
    const_true        shift, and go to state 79
    const_false       shift, and go to state 80

    E      go to state 129
    L      go to state 82
    R      go to state 83
    Y      go to state 84
    F      go to state 85
    LV     go to state 86
    IDU    go to state 87
    TRUE   go to state 88
    FALSE  go to state 89
    CHR    go to state 90
    STR    go to state 91
    NUM    go to state 92


State 98

   33 S: DO S . WHILE LEFT_PARENTHESIS E RIGHT_PARENTHESIS SEMI_COLON

    WHILE  shift, and go to state 130


State 99

   21 B: LEFT_BRACES LDV LS . RIGHT_BRACES
   25 LS: LS . S

    LEFT_BRACES   shift, and go to state 54
    RIGHT_BRACES  shift, and go to state 131
    RETURN        shift, and go to state 57
    BREAK         shift, and go to state 58
    WHILE         shift, and go to state 59
    CONTINUE      shift, and go to state 61
    IF            shift, and go to state 62
    DO            shift, and go to state 63
    id            shift, and go to state 21

    B    go to state 64
    S    go to state 102
    LV   go to state 69
    IDU  go to state 70


State 100

   23 LDV: LDV DV .

    $default  reduce using rule 23 (LDV)


State 101

   22 B: LEFT_BRACES LS RIGHT_BRACES .

    $default  reduce using rule 22 (B)


State 102

   25 LS: LS S .

    $default  reduce using rule 25 (LS)


State 103

   72 LV: LV LEFT_SQUARE . E RIGHT_SQUARE

    LEFT_PARENTHESIS  shift, and go to state 72
    PLUS_PLUS         shift, and go to state 73
    MINUS             shift, and go to state 74
    MINUS_MINUS       shift, and go to state 75
    NOT               shift, and go to state 76
    const_char        shift, and go to state 77
    const_number      shift, and go to state 30
    const_string      shift, and go to state 78
    id                shift, and go to state 21
    const_true        shift, and go to state 79
    const_false       shift, and go to state 80

    E      go to state 132
    L      go to state 82
    R      go to state 83
    Y      go to state 84
    F      go to state 85
    LV     go to state 86
    IDU    go to state 87
    TRUE   go to state 88
    FALSE  go to state 89
    CHR    go to state 90
    STR    go to state 91
    NUM    go to state 92


State 104

   71 LV: LV DOT . IDU

    id  shift, and go to state 21

    IDU  go to state 133


State 105

   35 S: LV ASSIGN . E SEMI_COLON

    LEFT_PARENTHESIS  shift, and go to state 72
    PLUS_PLUS         shift, and go to state 73
    MINUS             shift, and go to state 74
    MINUS_MINUS       shift, and go to state 75
    NOT               shift, and go to state 76
    const_char        shift, and go to state 77
    const_number      shift, and go to state 30
    const_string      shift, and go to state 78
    id                shift, and go to state 21
    const_true        shift, and go to state 79
    const_false       shift, and go to state 80

    E      go to state 134
    L      go to state 82
    R      go to state 83
    Y      go to state 84
    F      go to state 85
    LV     go to state 86
    IDU    go to state 87
    TRUE   go to state 88
    FALSE  go to state 89
    CHR    go to state 90
    STR    go to state 91
    NUM    go to state 92


State 106

   39 E: E . AND L
   40  | E . OR L
   60 F: LEFT_PARENTHESIS E . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 135
    AND                shift, and go to state 112
    OR                 shift, and go to state 113


State 107

   56 F: PLUS_PLUS LV .
   71 LV: LV . DOT IDU
   72   | LV . LEFT_SQUARE E RIGHT_SQUARE

    LEFT_SQUARE  shift, and go to state 103
    DOT          shift, and go to state 104

    $default  reduce using rule 56 (F)


State 108

   62 F: MINUS F .

    $default  reduce using rule 62 (F)


State 109

   57 F: MINUS_MINUS LV .
   71 LV: LV . DOT IDU
   72   | LV . LEFT_SQUARE E RIGHT_SQUARE

    LEFT_SQUARE  shift, and go to state 103
    DOT          shift, and go to state 104

    $default  reduce using rule 57 (F)


State 110

   63 F: NOT F .

    $default  reduce using rule 63 (F)


State 111

   38 S: RETURN E SEMI_COLON .

    $default  reduce using rule 38 (S)


State 112

   39 E: E AND . L

    LEFT_PARENTHESIS  shift, and go to state 72
    PLUS_PLUS         shift, and go to state 73
    MINUS             shift, and go to state 74
    MINUS_MINUS       shift, and go to state 75
    NOT               shift, and go to state 76
    const_char        shift, and go to state 77
    const_number      shift, and go to state 30
    const_string      shift, and go to state 78
    id                shift, and go to state 21
    const_true        shift, and go to state 79
    const_false       shift, and go to state 80

    L      go to state 136
    R      go to state 83
    Y      go to state 84
    F      go to state 85
    LV     go to state 86
    IDU    go to state 87
    TRUE   go to state 88
    FALSE  go to state 89
    CHR    go to state 90
    STR    go to state 91
    NUM    go to state 92


State 113

   40 E: E OR . L

    LEFT_PARENTHESIS  shift, and go to state 72
    PLUS_PLUS         shift, and go to state 73
    MINUS             shift, and go to state 74
    MINUS_MINUS       shift, and go to state 75
    NOT               shift, and go to state 76
    const_char        shift, and go to state 77
    const_number      shift, and go to state 30
    const_string      shift, and go to state 78
    id                shift, and go to state 21
    const_true        shift, and go to state 79
    const_false       shift, and go to state 80

    L      go to state 137
    R      go to state 83
    Y      go to state 84
    F      go to state 85
    LV     go to state 86
    IDU    go to state 87
    TRUE   go to state 88
    FALSE  go to state 89
    CHR    go to state 90
    STR    go to state 91
    NUM    go to state 92


State 114

   46 L: L EQUALS . R

    LEFT_PARENTHESIS  shift, and go to state 72
    PLUS_PLUS         shift, and go to state 73
    MINUS             shift, and go to state 74
    MINUS_MINUS       shift, and go to state 75
    NOT               shift, and go to state 76
    const_char        shift, and go to state 77
    const_number      shift, and go to state 30
    const_string      shift, and go to state 78
    id                shift, and go to state 21
    const_true        shift, and go to state 79
    const_false       shift, and go to state 80

    R      go to state 138
    Y      go to state 84
    F      go to state 85
    LV     go to state 86
    IDU    go to state 87
    TRUE   go to state 88
    FALSE  go to state 89
    CHR    go to state 90
    STR    go to state 91
    NUM    go to state 92


State 115

   42 L: L LESS_THAN . R

    LEFT_PARENTHESIS  shift, and go to state 72
    PLUS_PLUS         shift, and go to state 73
    MINUS             shift, and go to state 74
    MINUS_MINUS       shift, and go to state 75
    NOT               shift, and go to state 76
    const_char        shift, and go to state 77
    const_number      shift, and go to state 30
    const_string      shift, and go to state 78
    id                shift, and go to state 21
    const_true        shift, and go to state 79
    const_false       shift, and go to state 80

    R      go to state 139
    Y      go to state 84
    F      go to state 85
    LV     go to state 86
    IDU    go to state 87
    TRUE   go to state 88
    FALSE  go to state 89
    CHR    go to state 90
    STR    go to state 91
    NUM    go to state 92


State 116

   43 L: L GREATER_THAN . R

    LEFT_PARENTHESIS  shift, and go to state 72
    PLUS_PLUS         shift, and go to state 73
    MINUS             shift, and go to state 74
    MINUS_MINUS       shift, and go to state 75
    NOT               shift, and go to state 76
    const_char        shift, and go to state 77
    const_number      shift, and go to state 30
    const_string      shift, and go to state 78
    id                shift, and go to state 21
    const_true        shift, and go to state 79
    const_false       shift, and go to state 80

    R      go to state 140
    Y      go to state 84
    F      go to state 85
    LV     go to state 86
    IDU    go to state 87
    TRUE   go to state 88
    FALSE  go to state 89
    CHR    go to state 90
    STR    go to state 91
    NUM    go to state 92


State 117

   44 L: L LESS_OR_EQUAL . R

    LEFT_PARENTHESIS  shift, and go to state 72
    PLUS_PLUS         shift, and go to state 73
    MINUS             shift, and go to state 74
    MINUS_MINUS       shift, and go to state 75
    NOT               shift, and go to state 76
    const_char        shift, and go to state 77
    const_number      shift, and go to state 30
    const_string      shift, and go to state 78
    id                shift, and go to state 21
    const_true        shift, and go to state 79
    const_false       shift, and go to state 80

    R      go to state 141
    Y      go to state 84
    F      go to state 85
    LV     go to state 86
    IDU    go to state 87
    TRUE   go to state 88
    FALSE  go to state 89
    CHR    go to state 90
    STR    go to state 91
    NUM    go to state 92


State 118

   45 L: L GREATER_OR_EQUAL . R

    LEFT_PARENTHESIS  shift, and go to state 72
    PLUS_PLUS         shift, and go to state 73
    MINUS             shift, and go to state 74
    MINUS_MINUS       shift, and go to state 75
    NOT               shift, and go to state 76
    const_char        shift, and go to state 77
    const_number      shift, and go to state 30
    const_string      shift, and go to state 78
    id                shift, and go to state 21
    const_true        shift, and go to state 79
    const_false       shift, and go to state 80

    R      go to state 142
    Y      go to state 84
    F      go to state 85
    LV     go to state 86
    IDU    go to state 87
    TRUE   go to state 88
    FALSE  go to state 89
    CHR    go to state 90
    STR    go to state 91
    NUM    go to state 92


State 119

   47 L: L NOT_EQUAL . R

    LEFT_PARENTHESIS  shift, and go to state 72
    PLUS_PLUS         shift, and go to state 73
    MINUS             shift, and go to state 74
    MINUS_MINUS       shift, and go to state 75
    NOT               shift, and go to state 76
    const_char        shift, and go to state 77
    const_number      shift, and go to state 30
    const_string      shift, and go to state 78
    id                shift, and go to state 21
    const_true        shift, and go to state 79
    const_false       shift, and go to state 80

    R      go to state 143
    Y      go to state 84
    F      go to state 85
    LV     go to state 86
    IDU    go to state 87
    TRUE   go to state 88
    FALSE  go to state 89
    CHR    go to state 90
    STR    go to state 91
    NUM    go to state 92


State 120

   49 R: R PLUS . Y

    LEFT_PARENTHESIS  shift, and go to state 72
    PLUS_PLUS         shift, and go to state 73
    MINUS             shift, and go to state 74
    MINUS_MINUS       shift, and go to state 75
    NOT               shift, and go to state 76
    const_char        shift, and go to state 77
    const_number      shift, and go to state 30
    const_string      shift, and go to state 78
    id                shift, and go to state 21
    const_true        shift, and go to state 79
    const_false       shift, and go to state 80

    Y      go to state 144
    F      go to state 85
    LV     go to state 86
    IDU    go to state 87
    TRUE   go to state 88
    FALSE  go to state 89
    CHR    go to state 90
    STR    go to state 91
    NUM    go to state 92


State 121

   50 R: R MINUS . Y

    LEFT_PARENTHESIS  shift, and go to state 72
    PLUS_PLUS         shift, and go to state 73
    MINUS             shift, and go to state 74
    MINUS_MINUS       shift, and go to state 75
    NOT               shift, and go to state 76
    const_char        shift, and go to state 77
    const_number      shift, and go to state 30
    const_string      shift, and go to state 78
    id                shift, and go to state 21
    const_true        shift, and go to state 79
    const_false       shift, and go to state 80

    Y      go to state 145
    F      go to state 85
    LV     go to state 86
    IDU    go to state 87
    TRUE   go to state 88
    FALSE  go to state 89
    CHR    go to state 90
    STR    go to state 91
    NUM    go to state 92


State 122

   52 Y: Y TIMES . F

    LEFT_PARENTHESIS  shift, and go to state 72
    PLUS_PLUS         shift, and go to state 73
    MINUS             shift, and go to state 74
    MINUS_MINUS       shift, and go to state 75
    NOT               shift, and go to state 76
    const_char        shift, and go to state 77
    const_number      shift, and go to state 30
    const_string      shift, and go to state 78
    id                shift, and go to state 21
    const_true        shift, and go to state 79
    const_false       shift, and go to state 80

    F      go to state 146
    LV     go to state 86
    IDU    go to state 87
    TRUE   go to state 88
    FALSE  go to state 89
    CHR    go to state 90
    STR    go to state 91
    NUM    go to state 92


State 123

   53 Y: Y DIVIDE . F

    LEFT_PARENTHESIS  shift, and go to state 72
    PLUS_PLUS         shift, and go to state 73
    MINUS             shift, and go to state 74
    MINUS_MINUS       shift, and go to state 75
    NOT               shift, and go to state 76
    const_char        shift, and go to state 77
    const_number      shift, and go to state 30
    const_string      shift, and go to state 78
    id                shift, and go to state 21
    const_true        shift, and go to state 79
    const_false       shift, and go to state 80

    F      go to state 147
    LV     go to state 86
    IDU    go to state 87
    TRUE   go to state 88
    FALSE  go to state 89
    CHR    go to state 90
    STR    go to state 91
    NUM    go to state 92


State 124

   58 F: LV PLUS_PLUS .

    $default  reduce using rule 58 (F)


State 125

   59 F: LV MINUS_MINUS .

    $default  reduce using rule 59 (F)


State 126

   61 F: IDU LEFT_PARENTHESIS . LE RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 72
    PLUS_PLUS         shift, and go to state 73
    MINUS             shift, and go to state 74
    MINUS_MINUS       shift, and go to state 75
    NOT               shift, and go to state 76
    const_char        shift, and go to state 77
    const_number      shift, and go to state 30
    const_string      shift, and go to state 78
    id                shift, and go to state 21
    const_true        shift, and go to state 79
    const_false       shift, and go to state 80

    E      go to state 148
    L      go to state 82
    R      go to state 83
    Y      go to state 84
    F      go to state 85
    LE     go to state 149
    LV     go to state 86
    IDU    go to state 87
    TRUE   go to state 88
    FALSE  go to state 89
    CHR    go to state 90
    STR    go to state 91
    NUM    go to state 92


State 127

   32 S: WHILE LEFT_PARENTHESIS E . RIGHT_PARENTHESIS S
   39 E: E . AND L
   40  | E . OR L

    RIGHT_PARENTHESIS  shift, and go to state 150
    AND                shift, and go to state 112
    OR                 shift, and go to state 113


State 128

   27 DV: VAR LI COLON . T SEMI_COLON

    STRING   shift, and go to state 16
    BOOLEAN  shift, and go to state 17
    CHAR     shift, and go to state 18
    INTEGER  shift, and go to state 19
    id       shift, and go to state 21

    T    go to state 151
    IDU  go to state 23


State 129

   30 S: IF LEFT_PARENTHESIS E . RIGHT_PARENTHESIS S
   31  | IF LEFT_PARENTHESIS E . RIGHT_PARENTHESIS S ELSE S
   39 E: E . AND L
   40  | E . OR L

    RIGHT_PARENTHESIS  shift, and go to state 152
    AND                shift, and go to state 112
    OR                 shift, and go to state 113


State 130

   33 S: DO S WHILE . LEFT_PARENTHESIS E RIGHT_PARENTHESIS SEMI_COLON

    LEFT_PARENTHESIS  shift, and go to state 153


State 131

   21 B: LEFT_BRACES LDV LS RIGHT_BRACES .

    $default  reduce using rule 21 (B)


State 132

   39 E: E . AND L
   40  | E . OR L
   72 LV: LV LEFT_SQUARE E . RIGHT_SQUARE

    RIGHT_SQUARE  shift, and go to state 154
    AND           shift, and go to state 112
    OR            shift, and go to state 113


State 133

   71 LV: LV DOT IDU .

    $default  reduce using rule 71 (LV)


State 134

   35 S: LV ASSIGN E . SEMI_COLON
   39 E: E . AND L
   40  | E . OR L

    SEMI_COLON  shift, and go to state 155
    AND         shift, and go to state 112
    OR          shift, and go to state 113


State 135

   60 F: LEFT_PARENTHESIS E RIGHT_PARENTHESIS .

    $default  reduce using rule 60 (F)


State 136

   39 E: E AND L .
   42 L: L . LESS_THAN R
   43  | L . GREATER_THAN R
   44  | L . LESS_OR_EQUAL R
   45  | L . GREATER_OR_EQUAL R
   46  | L . EQUALS R
   47  | L . NOT_EQUAL R

    EQUALS            shift, and go to state 114
    LESS_THAN         shift, and go to state 115
    GREATER_THAN      shift, and go to state 116
    LESS_OR_EQUAL     shift, and go to state 117
    GREATER_OR_EQUAL  shift, and go to state 118
    NOT_EQUAL         shift, and go to state 119

    $default  reduce using rule 39 (E)


State 137

   40 E: E OR L .
   42 L: L . LESS_THAN R
   43  | L . GREATER_THAN R
   44  | L . LESS_OR_EQUAL R
   45  | L . GREATER_OR_EQUAL R
   46  | L . EQUALS R
   47  | L . NOT_EQUAL R

    EQUALS            shift, and go to state 114
    LESS_THAN         shift, and go to state 115
    GREATER_THAN      shift, and go to state 116
    LESS_OR_EQUAL     shift, and go to state 117
    GREATER_OR_EQUAL  shift, and go to state 118
    NOT_EQUAL         shift, and go to state 119

    $default  reduce using rule 40 (E)


State 138

   46 L: L EQUALS R .
   49 R: R . PLUS Y
   50  | R . MINUS Y

    PLUS   shift, and go to state 120
    MINUS  shift, and go to state 121

    $default  reduce using rule 46 (L)


State 139

   42 L: L LESS_THAN R .
   49 R: R . PLUS Y
   50  | R . MINUS Y

    PLUS   shift, and go to state 120
    MINUS  shift, and go to state 121

    $default  reduce using rule 42 (L)


State 140

   43 L: L GREATER_THAN R .
   49 R: R . PLUS Y
   50  | R . MINUS Y

    PLUS   shift, and go to state 120
    MINUS  shift, and go to state 121

    $default  reduce using rule 43 (L)


State 141

   44 L: L LESS_OR_EQUAL R .
   49 R: R . PLUS Y
   50  | R . MINUS Y

    PLUS   shift, and go to state 120
    MINUS  shift, and go to state 121

    $default  reduce using rule 44 (L)


State 142

   45 L: L GREATER_OR_EQUAL R .
   49 R: R . PLUS Y
   50  | R . MINUS Y

    PLUS   shift, and go to state 120
    MINUS  shift, and go to state 121

    $default  reduce using rule 45 (L)


State 143

   47 L: L NOT_EQUAL R .
   49 R: R . PLUS Y
   50  | R . MINUS Y

    PLUS   shift, and go to state 120
    MINUS  shift, and go to state 121

    $default  reduce using rule 47 (L)


State 144

   49 R: R PLUS Y .
   52 Y: Y . TIMES F
   53  | Y . DIVIDE F

    TIMES   shift, and go to state 122
    DIVIDE  shift, and go to state 123

    $default  reduce using rule 49 (R)


State 145

   50 R: R MINUS Y .
   52 Y: Y . TIMES F
   53  | Y . DIVIDE F

    TIMES   shift, and go to state 122
    DIVIDE  shift, and go to state 123

    $default  reduce using rule 50 (R)


State 146

   52 Y: Y TIMES F .

    $default  reduce using rule 52 (Y)


State 147

   53 Y: Y DIVIDE F .

    $default  reduce using rule 53 (Y)


State 148

   39 E: E . AND L
   40  | E . OR L
   70 LE: E .

    AND  shift, and go to state 112
    OR   shift, and go to state 113

    $default  reduce using rule 70 (LE)


State 149

   61 F: IDU LEFT_PARENTHESIS LE . RIGHT_PARENTHESIS
   69 LE: LE . COMMA E

    COMMA              shift, and go to state 156
    RIGHT_PARENTHESIS  shift, and go to state 157


State 150

   32 S: WHILE LEFT_PARENTHESIS E RIGHT_PARENTHESIS . S

    LEFT_BRACES  shift, and go to state 54
    RETURN       shift, and go to state 57
    BREAK        shift, and go to state 58
    WHILE        shift, and go to state 59
    CONTINUE     shift, and go to state 61
    IF           shift, and go to state 62
    DO           shift, and go to state 63
    id           shift, and go to state 21

    B    go to state 64
    S    go to state 158
    LV   go to state 69
    IDU  go to state 70


State 151

   27 DV: VAR LI COLON T . SEMI_COLON

    SEMI_COLON  shift, and go to state 159


State 152

   30 S: IF LEFT_PARENTHESIS E RIGHT_PARENTHESIS . S
   31  | IF LEFT_PARENTHESIS E RIGHT_PARENTHESIS . S ELSE S

    LEFT_BRACES  shift, and go to state 54
    RETURN       shift, and go to state 57
    BREAK        shift, and go to state 58
    WHILE        shift, and go to state 59
    CONTINUE     shift, and go to state 61
    IF           shift, and go to state 62
    DO           shift, and go to state 63
    id           shift, and go to state 21

    B    go to state 64
    S    go to state 160
    LV   go to state 69
    IDU  go to state 70


State 153

   33 S: DO S WHILE LEFT_PARENTHESIS . E RIGHT_PARENTHESIS SEMI_COLON

    LEFT_PARENTHESIS  shift, and go to state 72
    PLUS_PLUS         shift, and go to state 73
    MINUS             shift, and go to state 74
    MINUS_MINUS       shift, and go to state 75
    NOT               shift, and go to state 76
    const_char        shift, and go to state 77
    const_number      shift, and go to state 30
    const_string      shift, and go to state 78
    id                shift, and go to state 21
    const_true        shift, and go to state 79
    const_false       shift, and go to state 80

    E      go to state 161
    L      go to state 82
    R      go to state 83
    Y      go to state 84
    F      go to state 85
    LV     go to state 86
    IDU    go to state 87
    TRUE   go to state 88
    FALSE  go to state 89
    CHR    go to state 90
    STR    go to state 91
    NUM    go to state 92


State 154

   72 LV: LV LEFT_SQUARE E RIGHT_SQUARE .

    $default  reduce using rule 72 (LV)


State 155

   35 S: LV ASSIGN E SEMI_COLON .

    $default  reduce using rule 35 (S)


State 156

   69 LE: LE COMMA . E

    LEFT_PARENTHESIS  shift, and go to state 72
    PLUS_PLUS         shift, and go to state 73
    MINUS             shift, and go to state 74
    MINUS_MINUS       shift, and go to state 75
    NOT               shift, and go to state 76
    const_char        shift, and go to state 77
    const_number      shift, and go to state 30
    const_string      shift, and go to state 78
    id                shift, and go to state 21
    const_true        shift, and go to state 79
    const_false       shift, and go to state 80

    E      go to state 162
    L      go to state 82
    R      go to state 83
    Y      go to state 84
    F      go to state 85
    LV     go to state 86
    IDU    go to state 87
    TRUE   go to state 88
    FALSE  go to state 89
    CHR    go to state 90
    STR    go to state 91
    NUM    go to state 92


State 157

   61 F: IDU LEFT_PARENTHESIS LE RIGHT_PARENTHESIS .

    $default  reduce using rule 61 (F)


State 158

   32 S: WHILE LEFT_PARENTHESIS E RIGHT_PARENTHESIS S .

    $default  reduce using rule 32 (S)


State 159

   27 DV: VAR LI COLON T SEMI_COLON .

    $default  reduce using rule 27 (DV)


State 160

   30 S: IF LEFT_PARENTHESIS E RIGHT_PARENTHESIS S .
   31  | IF LEFT_PARENTHESIS E RIGHT_PARENTHESIS S . ELSE S

    ELSE  shift, and go to state 163

    $default  reduce using rule 30 (S)


State 161

   33 S: DO S WHILE LEFT_PARENTHESIS E . RIGHT_PARENTHESIS SEMI_COLON
   39 E: E . AND L
   40  | E . OR L

    RIGHT_PARENTHESIS  shift, and go to state 164
    AND                shift, and go to state 112
    OR                 shift, and go to state 113


State 162

   39 E: E . AND L
   40  | E . OR L
   69 LE: LE COMMA E .

    AND  shift, and go to state 112
    OR   shift, and go to state 113

    $default  reduce using rule 69 (LE)


State 163

   31 S: IF LEFT_PARENTHESIS E RIGHT_PARENTHESIS S ELSE . S

    LEFT_BRACES  shift, and go to state 54
    RETURN       shift, and go to state 57
    BREAK        shift, and go to state 58
    WHILE        shift, and go to state 59
    CONTINUE     shift, and go to state 61
    IF           shift, and go to state 62
    DO           shift, and go to state 63
    id           shift, and go to state 21

    B    go to state 64
    S    go to state 165
    LV   go to state 69
    IDU  go to state 70


State 164

   33 S: DO S WHILE LEFT_PARENTHESIS E RIGHT_PARENTHESIS . SEMI_COLON

    SEMI_COLON  shift, and go to state 166


State 165

   31 S: IF LEFT_PARENTHESIS E RIGHT_PARENTHESIS S ELSE S .

    $default  reduce using rule 31 (S)


State 166

   33 S: DO S WHILE LEFT_PARENTHESIS E RIGHT_PARENTHESIS SEMI_COLON .

    $default  reduce using rule 33 (S)
